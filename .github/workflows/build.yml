name: build

on: [push]

jobs:
  testing:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install fortran in Linux
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install -y gfortran

    - name: Install dependencies
      run: |
        python -m pip install --upgrade setuptools wheel pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock

    - name: Install Solcore Linux and MacOS
      if: matrix.os != 'windows-latest'
      run: pip install --no-deps --install-option="--with_pdd" -e .

    - name: Install Solcore Windows
      if: matrix.os == 'windows-latest'
      env:
        FC: gfortran
        CC: gcc
      run: |
        echo "[build]`ncompiler=mingw32" | Out-File -Encoding ASCII ~/pydistutils.cfg
        pip install --no-deps --install-option="--with_pdd" -e .
      shell: powershell

    - name: Test with pytest
      if: ! ((matrix.os == 'windows-latest') && (matrix.python-version == 3.8))
      run: pytest --cov=solcore/

    - name: Coveralls
      if: matrix.os == 'ubuntu-latest'
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: |
        pip install coveralls
        coveralls
